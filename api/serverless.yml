service: ecommerce-api-gateway

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}

  #add logging 
  logs:
    restApi:
      accessLogging: true
  
  environment:
    USER_POOL_ID: ${env:USER_POOL_ID}
    USER_POOL_CLIENT_ID: ${env:USER_POOL_CLIENT_ID}
    USER_POOL_CLIENT_SECRET: ${env:USER_POOL_CLIENT_SECRET, ''}
    USERS_TABLE: ${env:USERS_TABLE}
    AWS_REGION_NAME: ${env:AWS_REGION_NAME, 'us-east-1'}
    NODE_ENV: ${opt:stage, 'dev'}

  #Security & Peformance
  timeout: 30
  memorySize: 512
    
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:*
          Resource: "*"
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"
        - Effect: Allow 
          Action: 
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  # üîê Auth Service - All public authentication endpoints
  authService:
    handler: auth-service.handler
    timeout: 30
    memorySize: 512
    reservedConcurrency: 50  # Limit concurrent executions
    events:
      - http:
          path: /auth/register
          method: POST
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Authorization 
              - X-Requested-With
            allowCredentials: false
      - http:
          path: /auth/refresh_token
          method: POST
          cors: true
      
      - http:
          path: /auth/logout
          method: POST
          cors: true
      - http:
          path: /auth/logout_all
          method: POST 
          cors: true
      - http:
          path: /auth/login
          method: POST
          cors: true
      - http:
          path: /auth/confirm
          method: POST
          cors: true
      - http:
          path: /auth/resend_confirmation
          method: POST
          cors: true
      - http:
          path: /auth/forgot_password
          method: POST
          cors: true
      - http:
          path: /auth/reset_password
          method: POST
          cors: true
      - http:
          path: /auth/change_password
          method: POST
          cors: true
      - http:
          path: /auth/health
          method: GET
          cors: true
      - http:
          path: /auth/biometric/register
          method: POST
          cors: true
      - http:
          path: /auth/biometric/login
          method: POST
          cors: true
      - http:
          path: /auth/hbiometric/status
          method: GET
          cors: true
      - http:
          path: /auth/biometric/delete
          method: DELETE
          cors: true
      - http:
          path: /auth/biometric/face/register
          method: POST
          cors: true
      - http:
          path: /auth/biometric/face/login
          method: POST
          cors: true
      - http:
          path: /auth/biometric/webauthn/register
          method: POST
          cors: true
      - http:
          path: /auth/biometric/webauthn/login
          method: POST
          cors: true

  # üë§ User Service - Protected user management endpoints  
  userService:
    handler: user-service.handler
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: /users/profile
          method: GET
          cors: true
      - http:
          path: /users/profile
          method: POST
          cors: true
      - http:
          path: /users/change-password
          method: POST
          cors: true
      - http:
          path: /users/health
          method: GET
          cors: true

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0
    noAuth: true 
    noTimeout: true 

  # Api Gateway Configuration
  apiGateway:
    # Request validation 
    request:
      validateRequestBody: true 
      validateRequestParameters: true 

    # Throttling (Rate Limiting )
    throttle:
      rateLimit: 1000 #request per second 
      burstLimit: 2000 # burst requests 

    # Binary Media types 
    binaryMediaTypes:
      - '*/*'

    # Minimum compression size 
    minimumCompressionSize: 1024

    # Api Gateway logs
    logs:
      level: INFO 
      dataTrace: true 
      executionLogging: true 