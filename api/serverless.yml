service: ecommerce-api-gateway

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  
  environment:
    USER_POOL_ID: ${env:USER_POOL_ID}
    USER_POOL_CLIENT_ID: ${env:USER_POOL_CLIENT_ID}
    USER_POOL_CLIENT_SECRET: ${env:USER_POOL_CLIENT_SECRET, ''}
    USERS_TABLE: ${env:USERS_TABLE}
    AWS_REGION_NAME: ${env:AWS_REGION_NAME, 'us-east-1'}
    
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:*
          Resource: "*"
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"

functions:
  # üîê Auth Service - All public authentication endpoints
  authService:
    handler: auth-service.handler
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: /auth/register
          method: POST
          cors: true
      - http:
          path: /auth/logout
          method: POST
          cors: true
      - http:
          path: /auth/login
          method: POST
          cors: true
      - http:
          path: /auth/confirm
          method: POST
          cors: true
      - http:
          path: /auth/resend_confirmation
          method: POST
          cors: true
      - http:
          path: /auth/forgot-password
          method: POST
          cors: true
      - http:
          path: /auth/reset-password
          method: POST
          cors: true
      - http:
          path: /auth/health
          method: GET
          cors: true

  # üë§ User Service - Protected user management endpoints  
  userService:
    handler: user-service.handler
    timeout: 30
    memorySize: 256
    events:
      - http:
          path: /users/profile
          method: GET
          cors: true
      - http:
          path: /users/profile
          method: POST
          cors: true
      - http:
          path: /users/change-password
          method: POST
          cors: true
      - http:
          path: /users/health
          method: GET
          cors: true

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000